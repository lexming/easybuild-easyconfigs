No longer needed as it was already fixed in https://github.com/tensorflow/tensorflow/pull/34202
author: Alex Domingo (Vrije Universiteit Brussel)
diff -W 85 -Nru gpus.orig/cuda_configure.bzl gpus.new/cuda_configure.bzl
--- gpus.orig/cuda_configure.bzl	2021-10-25 10:18:06.612206000 +0200
+++ gpus.new/cuda_configure.bzl	2021-10-25 11:29:42.682137273 +0200
@@ -1198,19 +1198,6 @@
 
     cuda_defines["%{host_compiler_prefix}"] = host_compiler_prefix
 
-    # Bazel sets '-B/usr/bin' flag to workaround build errors on RHEL (see
-    # https://github.com/bazelbuild/bazel/issues/760).
-    # However, this stops our custom clang toolchain from picking the provided
-    # LLD linker, so we're only adding '-B/usr/bin' when using non-downloaded
-    # toolchain.
-    # TODO: when bazel stops adding '-B/usr/bin' by default, remove this
-    #       flag from the CROSSTOOL completely (see
-    #       https://github.com/bazelbuild/bazel/issues/5634)
-    if should_download_clang:
-        cuda_defines["%{linker_bin_path}"] = ""
-    else:
-        cuda_defines["%{linker_bin_path}"] = host_compiler_prefix
-
     cuda_defines["%{extra_no_canonical_prefixes_flags}"] = ""
     cuda_defines["%{unfiltered_compile_flags}"] = ""
     if is_cuda_clang:
