Fix makefile to use Easybuild environment
Author: Alex Domingo (Vrije Universiteit Brussel)
--- a/build_standalone/Makefile.gnu	2019-11-18 21:20:26.000000000 +0100
+++ b/build_standalone/Makefile.gnu	2020-04-10 13:15:31.457905000 +0200
@@ -49,13 +49,13 @@
 #
 ifneq ("$(shell which nf-config)","") 
 HAVE_NETCDF = 1
-EXTRA_FLAGS += -DHAVE_NETCDF
+DEFINES += -DHAVE_NETCDF
 EXTRA_INCLUDE += $(shell nf-config --fflags)
 EXTRA_LIB += $(shell nf-config --flibs)
 else
 ifneq ("$(shell which nc-config)","")
 HAVE_NETCDF = 1
-EXTRA_FLAGS += -DHAVE_NETCDF
+DEFINES += -DHAVE_NETCDF
 EXTRA_INCLUDE += $(shell nc-config --fflags)
 EXTRA_LIB += $(shell nc-config --flibs)
 endif
@@ -65,9 +65,11 @@
 # FIXME!!! Implement FFTW check
 #
 HAVE_FFTW3 = 0
-#EXTRA_FLAGS += -DHAVE_FFTW3
-#EXTRA_INCLUDE += -I/j1a/pas/applications/fftw-3.3/include
-#EXTRA_LIB += -L/j1a/pas/applications/fftw-3.3/lib -lfftw3
+ifneq ($(HAVE_FFTW3),0)
+DEFINES += -DHAVE_FFTW3
+EXTRA_INCLUDE += -I$(EBROOTFFTW)/include
+EXTRA_LIB += -L$(EBROOTFFTW)/lib -lfftw3
+endif
 
 
 #
@@ -75,7 +77,7 @@
 #
 # lapack/blas
 #
-EXTRA_LIB += -llapack -lblas
+EXTRA_LIB += -lopenblas
 
 #
 ## DFT-D3 library
@@ -85,10 +87,10 @@
 HAVE_DFTD3 = 0
 
 ifneq ($(HAVE_DFTD3),0)
-EXTRA_FLAGS += -DHAVE_DFTD3
-DFTD3_PATH = # Please specify the path to dftd3-lib
-EXTRA_LIB += -L$(DFTD3_PATH) -ldftd3
-EXTRA_INCLUDE += -I$(DFTD3_PATH)
+DEFINES += -DHAVE_DFTD3
+DFTD3_PATH = $(EBROOTDFTD3MINLIB)
+EXTRA_LIB += -L$(EBROOTDFTD3MINLIB)/lib -ldftd3
+EXTRA_INCLUDE += -I$(EBROOTDFTD3MINLIB)/include
 endif
 
 
@@ -101,7 +103,7 @@
 #
 # Normal (GNU)
 #
-OPTFLAGS = -g -O3 -funroll-loops -fbacktrace
+OPTFLAGS := -funroll-loops -fbacktrace
 #
 # Debug (GNU)
 #
@@ -123,9 +125,8 @@
 #                              use CUDA GPU hardware.
 #   -DHAVE_DFTD3               DFT-D3 library
 #
-# 
-DEFINES  = \
-	-DNO_BIND_C_OPTIONAL
+#
+DEFINES  += -DNO_BIND_C_OPTIONAL
 
 #
 # *** Compilation and linking flags
@@ -140,16 +141,15 @@
 #
 # GNU
 #
-FFLAGS   = $(GFFLAGS) -x f77-cpp-input
-F90FLAGS = $(GFFLAGS) $(EXTRA_INCLUDE) \
+FFLAGS   += $(GFFLAGS) -x f77-cpp-input
+F90FLAGS += $(GFFLAGS) $(EXTRA_INCLUDE) \
 	-ffree-form -ffree-line-length-none -x f95-cpp-input
-CFLAGS   = -O0
 
 #
 # Use LDFLAGS = -static if you want a static binary
 #
-LDFLAGS  = 
-LIBS     = $(EXTRA_LIB)
+LDFLAGS  :=
+LIBS     += $(EXTRA_LIB)
 
 include $(SRCDIR)/makefile.inc
 
