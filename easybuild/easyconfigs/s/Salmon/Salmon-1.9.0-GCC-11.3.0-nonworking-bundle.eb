##
# This is a contribution from DeepThought HPC Service, Flinders University, Adelaide, Australia
# Homepage:     https://staff.flinders.edu.au/research/deep-thought
#
# Authors::     Robert Qiao <rob.qiao@flinders.edu.au>
# License::     GLPv2
#
# Notes::
##
# Contribution from the NIHR Biomedical Research Centre
# Guy's and St Thomas' NHS Foundation Trust and King's College London
# uploaded by J. Sassmannshausen
# Thanks to people like Simon Brandord, Mikael Oehmann and Kenneth Hoste
# for their help with the ICE

easyblock = 'Bundle'

name = 'Salmon'
version = '1.9.0'

homepage = 'https://github.com/COMBINE-lab/salmon'
description = """Salmon is a wicked-fast program to produce a highly-accurate,
 transcript-level quantification estimates from RNA-seq data."""

toolchain = {'name': 'GCC', 'version': '11.3.0'}
toolchainopts = {'pic': True}

builddependencies = [
    ('CMake', '3.23.1'),
    ('pkgconf', '1.8.0'),
    ('jemalloc', '5.3.0'),
    ('Cereal', '1.3.2', '', SYSTEM),
    ('spdlog', '0.17.0', '', SYSTEM),
]

dependencies = [
    ('Boost', '1.79.0'),
    ('tbb', '2021.5.0'),
    ('cURL', '7.83.0'),
    ('libiconv', '1.17'),
    ('bzip2', '1.0.8'),
    ('XZ', '5.2.5'),
    ('zlib', '1.2.12'),
]

github_account = 'COMBINE-lab'
default_easyblock = 'CMakeMake'
default_component_specs = {
    'source_urls': [GITHUB_SOURCE],
}

# Disable link-time optimizations (-flto) because it triggers a segfault/internal compiler error (ICE)
# this issue might magically disappear in future versions of Salmon or GCC
# see https://github.com/COMBINE-lab/salmon/issues/778
_salmon_configopts = '-DNO_IPO=1 '
# Use dependencies from EasyBuild
_salmon_configopts += '-DJEMALLOC_ROOT="$EBROOTJEMALLOC" -DFETCHED_PUFFERFISH=1 '
# Use pufferfish from component
_salmon_configopts += '-DCMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES="%(installdir)/include" '
_salmon_configopts += '-DCMAKE_SHARED_LINKER_FLAGS="-L%(installdir)s/lib" '

components = [
    ('pufferfish', version, {
        'sources': [{'download_filename': 'salmon-v%(version)s.tar.gz', 'filename': SOURCE_TAR_GZ}],
        'patches': [
            'Salmon-1.9.0_pufferfish-tbb-detection.patch',
            'Salmon-1.9.0_pufferfish-include-map.patch',
            'Salmon-1.9.0_pufferfish-install-targets.patch',
        ],
        'start_dir': '%(name)s-salmon-v%(version)s',
        'preconfigopts': (
            "rm -rf %(builddir)s/%(name)s-salmon-v%(version)s/include/{cereal,spdlog} && "
            "cp %(builddir)s/salmon-%(version)s/src/LibraryFormat.cpp "
            "%(builddir)s/%(name)s-salmon-v%(version)s/src/LibraryFormat.cpp && "
            "cp %(builddir)s/salmon-%(version)s/include/LibraryFormat.hpp "
            "%(builddir)s/%(name)s-salmon-v%(version)s/include/LibraryFormat.hpp && "
        ),
        'configopts': '-DBUILD_PUFF_FOR_SALMON=ON',
    }),
    ('salmon', version, {
        'sources': [{'download_filename': 'v%(version)s.tar.gz', 'filename': SOURCE_TAR_GZ}],
        'patches': ['Salmon-1.9.0_remove-bundled-puffer.patch'],
        'start_dir': '%(name)s-%(version)s',
        'preconfigopts': (
            "rm -rf %(builddir)s/%(name)s-salmon-v%(version)s/include/spdlog && "
        ),
        'configopts': _salmon_configopts,
    }),
]

#runtest = 'test'

sanity_check_paths = {
    'files': ['bin/%(namelower)s'] + ['lib/lib%s.a' % x for x in ['graphdump', 'ntcard', 'salmon_core', 'twopaco']],
    'dirs': [],
}

sanity_check_commands = ["salmon --help"]

moduleclass = 'bio'
