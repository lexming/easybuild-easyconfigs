easyblock = 'CMakeMake'

name = 'LibTorch'
version = '1.7.1'

homepage = 'https://pytorch.org/cppdocs/'
description = """
The PyTorch C++ frontend provides a high level, pure C++ modeling interface for
neural network and general ML(Machine Learning) research and production use
cases, largely following the Python API in design and provided functionality."""

toolchain = {'name': 'fosscuda', 'version': '2020a'}

# LibTorch pulls in a bunch of submodules that are not releases.
# We download the submodule revisions from their repos.
# The list is generated by easybuild-framework/easybuild/scripts/createSubmoduleDeps.sh
local_extract_cmd_pattern = 'tar -C pytorch-%%(version)s/third_party/%s --strip-components=1 -xf %%s'

# List of sources taken from PyTorch v1.7.1
source_urls = ['https://github.com/pytorch/pytorch/archive']
sources = [
    'v%(version)s.tar.gz',  # LibTorch
    {
        'source_urls': ['https://github.com/pytorch/cpuinfo/archive'],
        'download_filename': '63b254577ed77a8004a9be6ac707f3dccc4e1fd9.tar.gz',
        'filename': 'cpuinfo-20200611.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'cpuinfo',
    },
    {
        'source_urls': ['https://github.com/eigenteam/eigen-git-mirror/archive'],
        'download_filename': 'd41dc4dd74acce21fb210e7625d5d135751fa9e5.tar.gz',
        'filename': 'eigen-20190125.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'eigen',
    },
    {
        'source_urls': ['https://github.com/pytorch/fbgemm/archive'],
        'download_filename': '1d710393d5b7588f5de3b83f51c22bbddf095229.tar.gz',
        'filename': 'fbgemm-20200914.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'fbgemm',
    },
    {
        'source_urls': ['https://github.com/Maratyszcza/FP16/archive'],
        'download_filename': '4dfe081cf6bcd15db339cf2680b9281b8451eeb3.tar.gz',
        'filename': 'FP16-20200514.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'FP16',
    },
    {
        'source_urls': ['https://github.com/fmtlib/fmt/archive'],
        'download_filename': 'cd4af11efc9c622896a3e4cb599fa28668ca3d05.tar.gz',
        'filename': 'fmt-20200806.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'fmt',
    },
    {
        'source_urls': ['https://github.com/houseroad/foxi/archive'],
        'download_filename': '4aba696ec8f31794fd42880346dc586486205e0a.tar.gz',
        'filename': 'foxi-20200922.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'foxi',
    },
    {
        'source_urls': ['https://github.com/Maratyszcza/FXdiv/archive'],
        'download_filename': 'b408327ac2a15ec3e43352421954f5b1967701d1.tar.gz',
        'filename': 'FXdiv-20200417.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'FXdiv',
    },
    {
        'source_urls': ['https://github.com/google/gemmlowp/archive'],
        'download_filename': '3fb5c176c17c765a3492cd2f0321b0dab712f350.tar.gz',
        'filename': 'gemmlowp-20181126.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'gemmlowp/gemmlowp',
    },
    {
        'source_urls': ['https://github.com/facebookincubator/gloo/archive'],
        'download_filename': '3dc0328fe6a9d47bd47c0c6ca145a0d8a21845c6.tar.gz',
        'filename': 'gloo-20200918.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'gloo',
    },
    {
        'source_urls': ['https://github.com/Maratyszcza/NNPACK/archive'],
        'download_filename': '24b55303f5cf65d75844714513a0d1b1409809bd.tar.gz',
        'filename': 'NNPACK-20191007.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'NNPACK',
    },
    {
        'source_urls': ['https://github.com/onnx/onnx/archive'],
        'download_filename': 'a82c6a7010e2e332d8f74ad5b0c726fd47c85376.tar.gz',
        'filename': 'onnx-20200531.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'onnx',
    },
    {
        'source_urls': ['https://github.com/Maratyszcza/PeachPy/archive'],
        'download_filename': '07d8fde8ac45d7705129475c0f94ed8925b93473.tar.gz',
        'filename': 'PeachPy-20180218.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'python-peachpy',
    },
    {
        'source_urls': ['https://github.com/Maratyszcza/psimd/archive'],
        'download_filename': '072586a71b55b7f8c584153d223e95687148a900.tar.gz',
        'filename': 'psimd-20200517.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'psimd',
    },
    {
        'source_urls': ['https://github.com/Maratyszcza/pthreadpool/archive'],
        'download_filename': '029c88620802e1361ccf41d1970bd5b07fd6b7bb.tar.gz',
        'filename': 'pthreadpool-20200615.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'pthreadpool',
    },
    {
        'source_urls': ['https://github.com/pytorch/QNNPACK/archive'],
        'download_filename': '7d2a4e9931a82adc3814275b6219a03e24e36b4c.tar.gz',
        'filename': 'QNNPACK-20190828.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'QNNPACK',
    },
    {
        'source_urls': ['https://github.com/shibatch/sleef/archive'],
        'download_filename': '7f523de651585fe25cade462efccca647dcc8d02.tar.gz',
        'filename': 'sleef-20190730.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'sleef',
    },
    {
        'source_urls': ['https://github.com/pytorch/tensorpipe/archive'],
        'download_filename': '95ff9319161fcdb3c674d2bb63fac3e94095b343.tar.gz',
        'filename': 'tensorpipe-20200928.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'tensorpipe',
    },
    {
        'source_urls': ['https://github.com/google/XNNPACK/archive'],
        'download_filename': '1b354636b5942826547055252f3b359b54acff95.tar.gz',
        'filename': 'XNNPACK-20200323.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'XNNPACK',
    },
    {
        'source_urls': ['https://github.com/asmjit/asmjit/archive'],
        'download_filename': '9057aa30b620f0662ff51e2230c126a345063064.tar.gz',
        'filename': 'asmjit-20200429.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'fbgemm/third_party/asmjit',
    },
    {
        'source_urls': ['https://github.com/google/googletest/archive'],
        'download_filename': '2fe3bd994b3189899d93f1d5a881e725e046fdc2.tar.gz',
        'filename': 'googletest-20180831.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'tensorpipe/third_party/googletest',
    },
    {
        'source_urls': ['https://github.com/google/libnop/archive'],
        'download_filename': 'aa95422ea8c409e3f078d2ee7708a5f59a8b9fa2.tar.gz',
        'filename': 'libnop-20200723.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'tensorpipe/third_party/libnop',
    },
    {
        'source_urls': ['https://github.com/libuv/libuv/archive'],
        'download_filename': '02a9e1be252b623ee032a3137c0b0c94afbe6809.tar.gz',
        'filename': 'libuv-20200419.tar.gz',
        'extract_cmd': local_extract_cmd_pattern % 'tensorpipe/third_party/libuv',
    },
]

builddependencies = [
    ('CMake', '3.16.4'),
    ('Python', '3.8.2'),
    ('PyYAML', '5.3'),
    ('SciPy-bundle', '2020.03', '-Python-3.8.2'),
]

dependencies = [
    ('protobuf', '3.13.0'),
    ('cuDNN', '8.0.4.30', '-CUDA-%(cudaver)s', True),
    ('NCCL', '2.8.3', '-CUDA-%(cudaver)s', True),
]

# default CUDA compute capabilities to use (override via --cuda-compute-capabilities)
#cuda_compute_capabilities = ['3.5', '3.7', '5.2', '6.0', '6.1', '7.0', '7.2', '7.5', '8.0']
cuda_compute_capabilities = ['3.5', '3.7', '5.2', '6.0', '6.1']

build_shared_libs = True

configopts = "-DBUILD_CUSTOM_PROTOBUF=OFF -DBUILD_PYTHON=OFF -DUSE_SYSTEM_NCCL=ON "
configopts += "-DTORCH_CUDA_ARCH_LIST='%s'" % ';'.join(cuda_compute_capabilities)

local_torch_libs = ['c10', 'c10_cuda', 'caffe2_detectron_ops_gpu', 'caffe2_nvrtc',
                    'torch', 'torch_cpu', 'torch_cuda', 'torch_global_deps']

sanity_check_paths = {
    'files': ['lib/lib%s.%s' % (l, SHLIB_EXT) for l in local_torch_libs],
    'dirs': ['include/caffe2', 'include/torch'],
}

moduleclass = 'devel'
